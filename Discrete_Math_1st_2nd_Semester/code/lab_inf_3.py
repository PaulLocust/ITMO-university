import re


# task1 var = 513
# task2 var = 5
# task3 var = 2

# –ù–∞–π—Ç–∏ —Å–º–∞–π–ª–∏–∫ [<|
def task1():
    pattern = r"\[\<\|"
    tests = [
        "XSasdsdj[<|sa",
        "fSs23we/,.kidsfg0}{[<|[<|",
        "snys[<|[[<|[<|",
        "\//dsasd[<|[<|[<|s",
        "[<|23223[<|s]{[<|"
    ]
    for i in range(5):
        print(len(re.findall(pattern, tests[i])))


# –° –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π—Ç–∏ –≤ —Ç–µ–∫—Å—Ç–µ –≤—Å–µ —Å–ª–æ–≤–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –¥–≤–µ –≥–ª–∞—Å–Ω—ã–µ
# —Å—Ç–æ—è—Ç –ø–æ–¥—Ä—è–¥, –∞ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –∏–¥—ë—Ç —Å–ª–æ–≤–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ –±–æ–ª—å—à–µ 3 —Å–æ–≥–ª–∞—Å–Ω—ã—Ö.
def task2():
    pattern = r"\b\w*[–ê–ï–Å–ò–û–£–´–≠–Æ–Ø–∞–µ—ë–∏–æ—É—ã—ç—é—è]{2}\w*\b \s+\b\w*[–ë–í–ì–î–ñ–ó–ô–ö–õ–ú–ù–ü–†–°–¢–§–•–¶–ß–®–©–±–≤–≥–¥–∂–∑–π–∫–ª–º–Ω–ø—Ä—Å—Ç—Ñ—Ö—Ü—á—à—â]{0,3}\w*\b"
    tests = [
        "–ò –µ—Å—Ç—å —á–µ–º –ø–ª–∞—Ç–∏—Ç—å, –Ω–æ —è –Ω–µ —Ö–æ—á—É –ü–æ–±–µ–¥—ã –ª—é–±–æ–π —Ü–µ–Ω–æ–π. –Ø –Ω–∏–∫–æ–º—É –Ω–µ —Ö–æ—á—É —Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≥—É –Ω–∞ –≥—Ä—É–¥—å. \
        –Ø —Ö–æ—Ç–µ–ª –±—ã –æ—Å—Ç–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π,–ü—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π.",

        "–¢–∞–∫–∏–µ —Å–ª–æ–≤–∞: –∞–ø–µ–ª—å—Å–∏–Ω, –∞–≤–∏–∞—Ü–∏—è, –æ–∫–µ–∞–Ω, —É—Ç—Ä–æ, –∞—Ä–±—É–∑, —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å—Ç–≤–æ.",

        "–í—Å–µ –ª—é–¥–∏ - –±—Ä–∞—Ç—å—è, –º—ã - —Å–µ–¥—å–º–∞—è –≤–æ–¥–∞ –∏ –º—ã –µ–¥–µ–º, –Ω–µ –∑–Ω–∞—é, –∑–∞—á–µ–º –∏ –∫—É–¥–∞ \
        –ú–æ–π —Å–æ—Å–µ–¥ –Ω–µ –º–æ–∂–µ—Ç, –æ–Ω —Ö–æ—á–µ—Ç —É–π—Ç–∏ –ù–æ –æ–Ω –Ω–µ –º–æ–∂–µ—Ç —É–π—Ç–∏, –æ–Ω –Ω–µ –∑–Ω–∞–µ—Ç –ø—É—Ç–∏",

        "–Ø –≤–∏–∂—É, –∫–∞–∫ –≤–æ–ª–Ω—ã —Å–º—ã–≤–∞—é—Ç —Å–ª–µ–¥—ã –Ω–∞ –ø–µ—Å–∫–µ, –Ø —Å–ª—ã—à—É, –∫–∞–∫ –≤–µ—Ç–µ—Ä –ø–æ–µ—Ç —Å–≤–æ—é —Å—Ç—Ä–∞–Ω–Ω—É—é –ø–µ—Å–Ω—é,\
        –Ø —Å–ª—ã—à—É, –∫–∞–∫ —Å—Ç—Ä—É–Ω—ã –¥–µ—Ä–µ–≤—å–µ–≤ –∏–≥—Ä–∞—é—Ç –µ–µ, –ú—É–∑—ã–∫—É –≤–æ–ª–Ω, –º—É–∑—ã–∫—É –≤–µ—Ç—Ä–∞.",

        "–î–æ–∂–¥—å –∏–¥—ë—Ç —Å —É—Ç—Ä–∞, –±—É–¥–µ—Ç, –±—ã–ª –∏ –µ—Å—Ç—å –ò –∫–∞—Ä–º–∞–Ω –º–æ–π –ø—É—Å—Ç, –Ω–∞ —á–∞—Å–∞—Ö —à–µ—Å—Ç—å\
        –ü–∞–ø–∏—Ä–æ—Å –Ω–µ—Ç –∏ –æ–≥–Ω—è –Ω–µ—Ç –ò –≤ –æ–∫–Ω–µ–µ –∑–Ω–∞–∫–æ–º–æ–º –Ω–µ–µ –≥–æ—Ä–∏—Ç —Å–≤–µ—Ç"
    ]
    for i in range(5):
        print(re.findall(pattern, tests[i]))


# –°—Ç—É–¥–µ–Ω—Ç –í–∞—Å—è –æ—á–µ–Ω—å –ª—é–±–∏—Ç –∫—É—Ä—Å ¬´–ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª. –û–¥–Ω–∞–∂–¥—ã –í–∞—Å–µ
# –∑–∞–¥–∞–ª–∏ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏. –ù–µ–¥–æ–ª–≥–æ
# –¥—É–º–∞—è, –í–∞—Å—è —Ä–µ—à–∏–ª –∑–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞. –§—É–Ω–∫—Ü–∏—é
# –æ–Ω –ø—Ä–∏–¥—É–º–∞–ª –Ω–µ —Å–ª–æ–∂–Ω—É—é 4ùë•
# 2 ‚àí 7, –≥–¥–µ ùë• ‚àí –∏—Å—Ö–æ–¥–Ω–æ–µ —á–∏—Å–ª–æ. –ü–æ–º–æ–≥–∏—Ç–µ –í–∞—Å–µ —Å –µ–≥–æ
# –¥–æ–º–∞—à–Ω–∏–º –∑–∞–¥–∞–Ω–∏–µ–º.
def task3():
    def replace_function(match):
        number = int(match.group(0))
        result = 4 * number ** 2 - 7
        return str(result)

    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
    pattern = r"\b\d+\b"

    # –ó–∞–º–µ–Ω–∞ —á–∏—Å–µ–ª –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏
    tests = [
        "20 + 22 = 42",
        "333 - 10 = 323",
        "asdasfgdsasd{}p-o\/.lkfd",
        "10 / 2 = 5",
        "2 ** 10 = 1024"
    ]
    for i in range(len(tests)):
        if any(map(str.isdigit, tests[i])):
            print(re.sub(pattern, replace_function, tests[i]))
        else:
            print("–í —Å—Ç—Ä–æ–∫–µ –Ω–µ—Ç —á–∏—Å–µ–ª")


print("–ó–∞–¥–∞–Ω–∏–µ 1")
task1()
print()

print("–ó–∞–¥–∞–Ω–∏–µ 2")
task2()
print()

print("–ó–∞–¥–∞–Ω–∏–µ 3")
task3()
print()