Inode:
1. inode - это структура данных, в которой хранятся метаданные файла и перечислены блоки с данными файла. 
2. Inode содержит метаданные файла или каталога, такие как права доступа, дата и время создания, размер, владелец, группа и расположение данных файла на диске.
3. Жесткая ссылка - это ссылка на файл, которая ссылается на inode этого файла, а не на сам файл.
4. Если вы хотите узнать номер inode для конкретного файла или каталога, вы можете использовать команду ls с опцией -i. Например, команда "ls -i myfile.txt" 
покажет номер inode для файла myfile.txt.

Символические ссылки: ln -s целевой_файл имя_символьной_ссылки
1. Могут ссылаться на файлы и каталоги;
2. После удаления, перемещения или переименования файла становятся недействительными;
3. Права доступа и номер inode отличаются от исходного файла;
4. При изменении прав доступа для исходного файла, права на ссылку останутся неизменными;
5. Можно ссылаться на другие разделы диска;
6. Содержат только имя файла, а не его содержимое.


Жесткие ссылки: ln целевой_файл имя_жесткой_ссылки
1. Работают только в пределах одной файловой системы;
2. Нельзя ссылаться на каталоги;
3. Имеют ту же информацию inode и набор разрешений что и у исходного файла;
4. Разрешения на ссылку изменятся при изменении разрешений файла;
5. Можно перемещать и переименовывать и даже удалять файл без вреда ссылке.


echo:
1. -n - не выводить перевод строки;
2. -e - включить поддержку вывода Escape последовательностей;
3. -E - отключить интерпретацию Escape последовательностей.

/c - удалить перевод строки;
/t - горизонтальная табуляция;
/v - вертикальная табуляция;
/b - удалить предыдущий символ;
/n - перевод строки;
/r - символ возврата каретки в начало строки.


ls:
1.  -a - отображать все файлы, включая скрытые, это те, перед именем которых стоит точка;
2.  -c - сортировать файлы по времени модификации или создания, сначала будут выведены новые файлы;
3.  -d - выводить только директории, без их содержимого, полезно при рекурсивном выводе;
4.  -i - отображать номер inode, в которой хранится этот файл;
5.  -l - выводить подробный список, в котором будет отображаться владелец, группа, дата создания, размер и другие параметры;
6.  -L - для символических ссылок отображать информацию о файле, на который они ссылаются;
7.  -r - обратный порядок сортировки;
8.  -R - рекурсивно отображать содержимое поддиректорий;
9.  -1 - отображать один файл на одну строку;
10. -p - добавить / индикатор к директориям;
11. -t - сортировать по времени, сначала новейшие;
12. -u - сортировать по времени последнего доступа;
13. -S - сортировать по размеру, сначала большие;


cat:
1. -b - нумеровать только непустые строки;
2. -E - показывать символ $ в конце каждой строки;
3. -n - нумеровать все строки;
4. -s - удалять пустые повторяющиеся строки;
5. -T - отображать табуляции в виде ^I;
6. -h - отобразить справку;
7. -v - версия утилиты.

cat file1 file2 > file3 - перекидываем содержимое file1 и file2 в file3


wc:
1. -c - Отобразить размер объекта в байтах
2. -m - Показать количесто символов в объекте
3. -l - Вывести количество строк в объекте
4. -w - Отобразить количество слов в объекте
wc file
вывод x строк y слов z кол-во символов


head:
1. -c (--bytes) — позволяет задавать количество текста не в строках, а в байтах | head -c 2 file.txt
2. -n (--lines) — показывает заданное количество строк вместо 10, которые выводятся по умолчанию.


tail:
1. -c - выводить указанное количество байт с конца файла;
2. -n - выводить указанное количество строк из конца файла;


sort:
1.  -n - сортировка строк linux по числовому значению
2.  -r - сортировать в обратном порядке
3.  -k - указать поле по которому нужно сортировать строки, если не задано, сортировка выполняется по всей строке.

4.  -b - не учитывать пробелы
5.  -d - использовать для сортировки только буквы и цифры
6.  -с - проверить был ли отсортирован файл
7.  -o - вывести результат в файл
8.  -u - игнорировать повторяющиеся строки
9.  -m - объединение ранее отсортированных файлов
10. -i - сортировать только по ASCII символах
11. -f - использовать в качестве разделителя полей ваш символ вместо пробела.
12. -S - отсортировать от самого большого до самого маленького


grep:
  
  grep [опции] шаблон [/путь/к/файлу/или/папке...]
 Или:
  команда | grep [опции] шаблон
 Опции               - это дополнительные параметры, с помощью которых указываются различные настройки поиска и вывода, 
                       например количество строк или режим инверсии.
 Шаблон              - это любая строка или регулярное выражение, по которому будет выполняться поиск.
 Имя файла или папки - это то место, где будет выполняться поиск. Как вы увидите дальше, 
                       grep позволяет искать в нескольких файлах и даже в каталоге, 
                       используя рекурсивный режим.
 1. -i - не учитывать регистр;
 2. -l - отобразить только имена файлов, в которых найден шаблон;
 3. -n - показывать номер строки в файле;
 4. -s - не показывать сообщения об ошибках;
 5. -v - инвертировать поиск, выдавать все строки кроме тех, что содержат шаблон;
 6. -E - использовать регулярные выражения при поиске;
 7. -r - рекурсивно


find:
find [папка] [параметры] критерий шаблон [действие]
Параметры
1. -P - никогда не открывать символические ссылки.
1. -L - получает информацию о файлах по символическим ссылкам. Важно для дальнейшей обработки, чтобы обрабатывалась не ссылка, а сам файл.
1. -maxdepth - максимальная глубина поиска по подкаталогам, для поиска только в текущем каталоге установите 1.
1. -depth - искать сначала в текущем каталоге, а потом в подкаталогах.
1. -mount искать файлы только в этой файловой системе.
1. -version - показать версию утилиты find.
1. -print - выводить полные имена файлов.
1. -type f - искать только файлы.
1. -type d - поиск папки в Linux.

Критерии:
1. -name - поиск файлов по имени.
1. -perm - поиск файлов в Linux по режиму доступа.
1. -user - поиск файлов по владельцу.
1. -group - поиск по группе.
1. -mtime - поиск по времени модификации файла.
1. -atime - поиск файлов по дате последнего чтения.
1. -nogroup - поиск файлов, не принадлежащих ни одной группе.
1. -nouser - поиск файлов без владельцев.
1. -newer - найти файлы новее чем указанный.
1. -size - поиск файлов в Linux по их размеру.





МЕТАСИМВОЛЫ:
 * - знак, обозначающий то, что будет стоять в начале строки a* или в конце *a или с двух сторон a*a
$(команда) - означает, что команда в скобка запустится и результат передастся сюда же (Разворачивает арифметическое выражение и передает его оболочке)
|| - логическое или
&& - команда1 && команда2 означает, что команда2 выполнится только если команда1 выполнится успешно
 & - Запускает процессы или команды в фоновом режиме
 ; - Позволяет выполнять последовательные команды, одну за другой
 | - Делает вывод одной команды вводом для другой
2> - Направляет стандартные сообщения об ошибке в файл /dev/null
 \ - Позволяет экранировать метасимвол, то есть отменять его особое значение
 . - Есть несколько значений: может указывать текущую позицию при запуске таких команд, как cd, find или sh; 
     может быть подстановочным знаком, обозначает один любой символ.
(-) - диапазон символов

 Символ «карет» (^) и «доллар» ($) в регулярных выражениях играют роль якорей. Это означает, 
что в их присутствии совпадение с шаблоном возможно, только если оно будет найдено в начале строки (^) или в ее конце ($).
ls /bin | grep '^zip'   	ls /bin | grep ‘zip$’
Output				Output:
zip				funzip
zipcloak			gpg-zip
zipdetails			gunzip
zipgrep

С помощью дефиса (-) можно определять диапазоны символов.
**/*.txt - значит то, что мы ищем все файлы с форматом .txt во всех директориях
   *.txt - ищем только в текущей директории


