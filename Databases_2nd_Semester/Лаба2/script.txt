-- 1.
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ЧЛВК_ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ФАМИЛИЯ < Ёлкин.
-- b) Н_СЕССИЯ.ИД = 14369.
-- c) Н_СЕССИЯ.ИД > 32199.
-- Вид соединения: RIGHT JOIN.

SELECT 
	Н_ЛЮДИ.ОТЧЕСТВО, Н_СЕССИЯ.ЧЛВК_ИД 
FROM 
	Н_ЛЮДИ 
RIGHT JOIN Н_СЕССИЯ 
	ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE 
	Н_ЛЮДИ.ФАМИЛИЯ < 'Ёлкин' 
	AND Н_СЕССИЯ.ИД = 14369 
	AND Н_СЕССИЯ.ИД > 32199;

-- 2.
-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.ИД.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ИМЯ > Ярослав.
-- b) Н_ОБУЧЕНИЯ.НЗК < 001000.
-- Вид соединения: INNER JOIN.

SELECT
	Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.ИД
FROM
	Н_ЛЮДИ
INNER JOIN Н_ОБУЧЕНИЯ
	ON Н_ЛЮДИ.ИД = Н_ОБУЧЕНИЯ.ЧЛВК_ИД 
INNER JOIN Н_УЧЕНИКИ
	ON Н_ОБУЧЕНИЯ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE 
	Н_ЛЮДИ.ИМЯ > 'Ярослав'
	AND Н_ОБУЧЕНИЯ.НЗК < '001000';

-- 3.
-- Вывести число студентов вечерней формы обучения, которые старше 25 лет.
-- Ответ должен содержать только одно число.

SELECT 
	COUNT(*)
FROM Н_УЧЕНИКИ
JOIN Н_ПЛАНЫ 
	ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ЛЮДИ
	ON Н_УЧЕНИКИ.ИД = Н_ЛЮДИ.ИД
WHERE 
	date_part('year',age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) > 25	
	AND Н_ПЛАНЫ.ФО_ИД = 2; -- Вечерняя форма

-- 4.
-- В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) менее 2 групп на заочной форме обучения.
-- Для реализации использовать соединение таблиц.
SELECT
	Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
FROM
	Н_ГРУППЫ_ПЛАНОВ
JOIN Н_УЧЕНИКИ
	ON Н_УЧЕНИКИ.ГРУППА = Н_ГРУППЫ_ПЛАНОВ.ГРУППА
JOIN Н_ПЛАНЫ 
	ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_ЛЮДИ
	ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE 
	Н_ПЛАНЫ.ФО_ИД = 3 -- Заочная форма
	
GROUP BY Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
HAVING COUNT(DISTINCT Н_УЧЕНИКИ.ГРУППА) < 2;

-- 5.
-- Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст), где средний возраст равен минимальному возрасту в группе 3100.

SELECT 
	Н_УЧЕНИКИ.ГРУППА, AVG(date_part('year', age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)))
FROM 
	Н_ЛЮДИ
JOIN Н_УЧЕНИКИ 
	ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД -- или проосто УЧЕНИКИ_ИД?
GROUP BY Н_УЧЕНИКИ.ГРУППА
HAVING AVG(date_part('year', age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ))) < 
(
  SELECT AVG(date_part('year', age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)))
  FROM Н_ЛЮДИ
  JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
  WHERE Н_УЧЕНИКИ.ГРУППА = '3100'
);

-- 6.
-- Получить список студентов, отчисленных после первого сентября 2012 года с очной или заочной формы обучения (специальность: 230101). 
-- В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать соединение таблиц.
SELECT Н_УЧЕНИКИ.ГРУППА,
       Н_УЧЕНИКИ.ИД,
       Н_ЛЮДИ.ФАМИЛИЯ,
       Н_ЛЮДИ.ИМЯ,
       Н_ЛЮДИ.ОТЧЕСТВО,
       Н_УЧЕНИКИ.П_ПРКОК_ИД
FROM 
	Н_УЧЕНИКИ
JOIN Н_ЛЮДИ
	ON Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
JOIN Н_ПЛАНЫ
	ON Н_УЧЕНИКИ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
JOIN Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ
	ON Н_ПЛАНЫ.НАПС_ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.ИД
JOIN Н_НАПР_СПЕЦ
	ON Н_НАПР_СПЕЦ.ИД = Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ.НС_ИД
	AND Н_НАПР_СПЕЦ.НАИМЕНОВАНИЕ = 'Программная инженерия'
WHERE 
	(Н_ПЛАНЫ.ФО_ИД = 1 OR Н_ПЛАНЫ.ФО_ИД = 3)
	AND Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл'
	AND Н_УЧЕНИКИ.СОСТОЯНИЕ = 'утвержден'
	AND DATE(Н_УЧЕНИКИ.НАЧАЛО) > '2012-09-01';

-- 7.
-- Вывести список студентов, имеющих одинаковые фамилии, но не совпадающие ид.
SELECT DISTINCT Копия.ФАМИЛИЯ 
FROM 
	Н_ЛЮДИ, Н_ЛЮДИ Копия 
JOIN Н_УЧЕНИКИ 
	ON Копия.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД 
WHERE Н_ЛЮДИ.ФАМИЛИЯ = Копия.ФАМИЛИЯ AND Н_ЛЮДИ.ИД != Копия.ИД	
